{"version":3,"sources":["firebase/config.js","components/Loader.js","context/authContext.js","routes/PrivateRoute.js","components/Navigation.js","components/UploadForm.js","components/TweetFactory.js","components/TweetItem.js","components/TweetList.js","pages/Home.js","components/AuthTemplate.js","components/AuthForm.js","hooks/useInput.js","components/LoginForm.js","pages/Login.js","components/RegisterForm.js","pages/Register.js","pages/Profile.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","projectAuth","auth","projectStorage","storage","projectFirestore","firestore","Loader","className","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","isLoading","setIsLoading","useEffect","onAuthStateChanged","user","Provider","value","PrivateRoute","restProps","useContext","Boolean","to","Navigation","history","useHistory","onLogout","useCallback","signOut","push","icon","faTwitter","faUser","onClick","faSignOutAlt","UploadForm","text","setText","imageFile","setImageFile","imageDataUrl","setImageDataUrl","error","setError","onChangeFile","e","file","target","files","reader","FileReader","readAsDataURL","onerror","onloadend","result","processFile","onChangeText","onSubmit","a","preventDefault","imageUrl","imageRef","ref","child","uid","Date","now","name","putString","getDownloadURL","tweetObj","createdAt","creatorId","creatorName","displayName","collection","add","console","onRemoveImage","type","placeholder","onChange","maxLength","required","faAngleRight","accept","faPlus","src","alt","faTimes","TweetFactory","moment","locale","TweetItem","isOwner","isToggle","setIsToggle","onToggle","prev","faEllipsisV","fromNow","TweetList","tweets","setTweets","orderBy","onSnapshot","snapshot","tweetArray","docs","map","doc","id","data","tweet","Home","AuthTemplate","textMap","login","register","AuthForm","form","onSubmitEmail","onSubmitGoogle","email","username","password","reducer","state","action","useInput","initialForm","useReducer","dispatch","LoginForm","signInWithEmailAndPassword","provider","GoogleAuthProvider","signInWithPopup","Login","RegisterForm","createUserWithEmailAndPassword","updateProfile","Register","Profile","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33589e95.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const projectAuth = firebase.auth();\r\nexport const projectStorage = firebase.storage();\r\nexport const projectFirestore = firebase.firestore();\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState, createContext } from 'react';\r\nimport { projectAuth } from '../firebase/config';\r\nimport Loader from '../components/Loader';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    projectAuth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../context/authContext';\r\n\r\nconst PrivateRoute = ({ children, ...restProps }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route {...restProps}>\r\n      {Boolean(currentUser) ? children : <Redirect to=\"/login\" />}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useCallback } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { projectAuth } from '../firebase/config';\r\n\r\nconst Navigation = () => {\r\n  const history = useHistory();\r\n\r\n  const onLogout = useCallback(() => {\r\n    projectAuth.signOut();\r\n    history.push('/');\r\n  }, [history]);\r\n\r\n  return (\r\n    <div className=\"navigation-block\">\r\n      <Link to=\"/\">\r\n        <FontAwesomeIcon icon={faTwitter} />\r\n        <span>Home</span>\r\n      </Link>\r\n      <Link to=\"/profile\">\r\n        <FontAwesomeIcon icon={faUser} />\r\n        <span>Profile</span>\r\n      </Link>\r\n      <button className=\"logout-button\" onClick={onLogout}>\r\n        <FontAwesomeIcon icon={faSignOutAlt} />\r\n        <span>Logout</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faAngleRight,\r\n  faTimes,\r\n  faPlus,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { projectFirestore, projectStorage } from '../firebase/config';\r\n\r\nconst UploadForm = ({ currentUser }) => {\r\n  const [text, setText] = useState('');\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [imageDataUrl, setImageDataUrl] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  function processFile(file) {\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onerror = () => setError('오류 발생');\r\n    reader.onloadend = (e) => {\r\n      const { result } = e.target;\r\n      setImageDataUrl(result);\r\n    };\r\n  }\r\n\r\n  const onChangeFile = useCallback((e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImageFile(file);\r\n      processFile(file);\r\n    }\r\n  }, []);\r\n\r\n  const onChangeText = useCallback((e) => {\r\n    setText(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      if (text === '') return;\r\n\r\n      let imageUrl = '';\r\n      if (imageDataUrl) {\r\n        const imageRef = projectStorage\r\n          .ref()\r\n          .child(`${currentUser.uid}/${Date.now()}_${imageFile.name}`);\r\n        const result = await imageRef.putString(imageDataUrl, 'data_url');\r\n        imageUrl = await result.ref.getDownloadURL();\r\n      }\r\n\r\n      try {\r\n        const tweetObj = {\r\n          text,\r\n          createdAt: Date.now(),\r\n          creatorId: currentUser.uid,\r\n          creatorName: currentUser.displayName,\r\n          imageUrl,\r\n        };\r\n        await projectFirestore.collection('tweets').add(tweetObj);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError('오류 발생');\r\n      }\r\n      setText('');\r\n      setImageFile(null);\r\n      setImageDataUrl('');\r\n      setError('');\r\n    },\r\n    [text, imageFile, imageDataUrl, currentUser.uid, currentUser.displayName],\r\n  );\r\n\r\n  const onRemoveImage = useCallback(async () => {\r\n    setImageFile(null);\r\n    setImageDataUrl('');\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"upload-form-block\">\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"text-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"오늘 하루는 어땠나요?\"\r\n            value={text}\r\n            onChange={onChangeText}\r\n            maxLength={120}\r\n            required\r\n          />\r\n          <button>{<FontAwesomeIcon icon={faAngleRight} />}</button>\r\n        </div>\r\n        <div className=\"image-form\">\r\n          {!imageFile && (\r\n            <>\r\n              <label>\r\n                <input type=\"file\" accept=\"image/*\" onChange={onChangeFile} />\r\n                <FontAwesomeIcon icon={faPlus} />\r\n              </label>\r\n              <p>사진 추가하기</p>\r\n            </>\r\n          )}\r\n          {imageFile && imageDataUrl && (\r\n            <div className=\"output\">\r\n              <span className=\"file-name\">{imageFile.name}</span>\r\n              <div className=\"image-preview\">\r\n                <img src={imageDataUrl} alt={imageFile.name} />\r\n                <div className=\"remove-preview\" onClick={onRemoveImage}>\r\n                  <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {error && <div className=\"error\">{error}</div>}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","import React, { useContext } from 'react';\r\nimport UploadForm from './UploadForm';\r\nimport { AuthContext } from '../context/authContext';\r\n\r\nconst TweetFactory = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div className=\"tweet-factory-block\">\r\n      <UploadForm currentUser={currentUser} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetFactory;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ko';\r\n\r\nmoment.locale('ko');\r\n\r\nconst TweetItem = ({ tweetObj, isOwner }) => {\r\n  const [isToggle, setIsToggle] = useState(false);\r\n\r\n  const onToggle = useCallback(() => {\r\n    setIsToggle((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tweet-item-block\">\r\n      <div className=\"header\">\r\n        <p>{tweetObj.creatorName}</p>\r\n        {isOwner && (\r\n          <div>\r\n            {isToggle && (\r\n              <>\r\n                <span>수정</span>\r\n                <span>삭제</span>\r\n              </>\r\n            )}\r\n            <i onClick={onToggle}>\r\n              <FontAwesomeIcon icon={faEllipsisV} />\r\n            </i>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"body\">\r\n        {tweetObj.imageUrl && (\r\n          <div className=\"image-area\">\r\n            <img src={tweetObj.imageUrl} alt=\"\" />\r\n          </div>\r\n        )}\r\n        <div className=\"text-area\">\r\n          <p className=\"content\">{tweetObj.text}</p>\r\n          <p className=\"time\">{moment(tweetObj.createdAt).fromNow()}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetItem;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport TweetItem from './TweetItem';\r\nimport { projectFirestore } from '../firebase/config';\r\nimport { AuthContext } from '../context/authContext';\r\n\r\nconst TweetList = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    projectFirestore\r\n      .collection('tweets')\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot((snapshot) => {\r\n        const tweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setTweets(tweetArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tweet-list-block\">\r\n      {tweets.map((tweet) => (\r\n        <TweetItem\r\n          key={tweet.id}\r\n          tweetObj={tweet}\r\n          isOwner={tweet.creatorId === currentUser.uid}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetList;\r\n","import React from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport TweetFactory from '../components/TweetFactory';\r\nimport TweetList from '../components/TweetList';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home-block\">\r\n      <div className=\"home-inner\">\r\n        <Navigation />\r\n        <TweetFactory />\r\n        <TweetList />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst AuthTemplate = ({ children }) => {\r\n  return (\r\n    <div className=\"auth-block\">\r\n      <div className=\"white-box\">\r\n        <div className=\"logo-area\">\r\n          <FontAwesomeIcon icon={faTwitter} />\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst textMap = {\r\n  login: '로그인',\r\n  register: '회원가입',\r\n};\r\n\r\nconst AuthForm = ({\r\n  type,\r\n  form,\r\n  onChange,\r\n  onSubmitEmail,\r\n  onSubmitGoogle,\r\n  error,\r\n}) => {\r\n  const text = textMap[type];\r\n  const { email, username, password } = form;\r\n\r\n  return (\r\n    <div className=\"auth-form-block\">\r\n      <h2>{text}</h2>\r\n      <form>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"이메일\"\r\n          value={email}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        {type === 'register' && (\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"이름\"\r\n            value={username}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        )}\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          value={password}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <button\r\n          className=\"email-button\"\r\n          onClick={\r\n            username\r\n              ? onSubmitEmail(email, password, username)\r\n              : onSubmitEmail(email, password)\r\n          }\r\n        >\r\n          {text}\r\n        </button>\r\n      </form>\r\n      <div className=\"divider\">OR</div>\r\n      <div className=\"social-button\">\r\n        <button className=\"google-button\" onClick={onSubmitGoogle}>\r\n          Google로 계속하기\r\n        </button>\r\n      </div>\r\n      <div className=\"link\">\r\n        {type === 'login' ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n          <Link to=\"/login\">로그인</Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { useReducer, useCallback } from 'react';\r\n\r\nfunction reducer(state, action) {\r\n  return {\r\n    ...state,\r\n    [action.name]: action.value,\r\n  };\r\n}\r\n\r\nexport default function useInput(initialForm) {\r\n  const [state, dispatch] = useReducer(reducer, initialForm);\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      dispatch(e.target);\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return [state, onChange];\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport AuthForm from './AuthForm';\r\nimport { firebaseInstance, projectAuth } from '../firebase/config';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst LoginForm = () => {\r\n  const [form, onChange] = useInput({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const onSubmitEmail = useCallback(\r\n    (email, password) => async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n        await projectAuth.signInWithEmailAndPassword(email, password);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError('로그인 실패');\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onSubmitGoogle = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n      await projectAuth.signInWithPopup(provider);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError('로그인 실패');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"login\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmitEmail={onSubmitEmail}\r\n      onSubmitGoogle={onSubmitGoogle}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../context/authContext';\r\nimport AuthTemplate from '../components/AuthTemplate';\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nconst Login = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      history.push('/');\r\n    }\r\n  }, [history, currentUser]);\r\n\r\n  return (\r\n    <AuthTemplate>\r\n      <LoginForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useCallback, useState } from 'react';\r\nimport AuthForm from './AuthForm';\r\nimport { firebaseInstance, projectAuth } from '../firebase/config';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst RegisterForm = () => {\r\n  const [form, onChange] = useInput({\r\n    email: '',\r\n    password: '',\r\n    username: '',\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const onSubmitEmail = useCallback(\r\n    (email, password, username) => async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n        const { user } = await projectAuth.createUserWithEmailAndPassword(\r\n          email,\r\n          password,\r\n        );\r\n        await user.updateProfile({ ...user, displayName: username });\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError('회원가입 실패');\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onSubmitGoogle = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n      await projectAuth.signInWithPopup(provider);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError('회원가입 실패');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"register\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmitEmail={onSubmitEmail}\r\n      onSubmitGoogle={onSubmitGoogle}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../context/authContext';\r\nimport AuthTemplate from '../components/AuthTemplate';\r\nimport RegisterForm from '../components/RegisterForm';\r\n\r\nconst Register = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      history.push('/');\r\n    }\r\n  }, [history, currentUser]);\r\n\r\n  return (\r\n    <AuthTemplate>\r\n      <RegisterForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\n\r\nconst Profile = () => {\r\n  return <div>Profile Page</div>;\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { AuthProvider } from './context/authContext';\nimport PrivateRoute from './routes/PrivateRoute';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Profile from './pages/Profile';\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <PrivateRoute path=\"/profile\">\n            <Profile />\n          </PrivateRoute>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <PrivateRoute path=\"/\">\n            <Home />\n          </PrivateRoute>\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}