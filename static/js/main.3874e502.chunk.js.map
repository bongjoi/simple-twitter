{"version":3,"sources":["firebase/config.js","components/Loader.js","context/authContext.js","routes/PrivateRoute.js","components/Navigation.js","components/ProgressBar.js","components/UploadForm.js","components/TweetFactory.js","pages/Home.js","components/AuthTemplate.js","components/AuthForm.js","hooks/useInput.js","components/LoginForm.js","pages/Login.js","components/RegisterForm.js","pages/Register.js","pages/Profile.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","projectAuth","auth","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","Loader","className","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","isLoading","setIsLoading","useEffect","onAuthStateChanged","user","Provider","value","PrivateRoute","restProps","useContext","Boolean","to","Navigation","history","useHistory","onLogout","useCallback","signOut","push","icon","faTwitter","faUser","onClick","faSignOutAlt","ProgressBar","progress","imageUrl","setIsShowProgress","div","initial","width","animate","UploadForm","text","setText","imageFile","setImageFile","setImageUrl","setProgress","isShowProgress","error","setError","imageRef","ref","child","uid","name","put","on","snap","percentage","bytesTransferred","totalBytes","a","getDownloadURL","url","onChangeFile","e","selected","target","files","includes","type","onChangeText","onSubmit","preventDefault","tweetObj","createdAt","creatorId","collection","add","console","onRemoveImage","refFromURL","delete","placeholder","onChange","maxLength","required","faAngleRight","accept","faPlus","src","alt","faTimes","TweetFactory","Home","AuthTemplate","textMap","login","register","AuthForm","form","onSubmitEmail","onSubmitGoogle","email","username","password","reducer","state","action","useInput","initialForm","useReducer","dispatch","LoginForm","signInWithEmailAndPassword","provider","GoogleAuthProvider","signInWithPopup","Login","RegisterForm","createUserWithEmailAndPassword","updateProfile","displayName","Register","Profile","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3874e502.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const projectAuth = firebase.auth();\r\nexport const projectStorage = firebase.storage();\r\nexport const projectFirestore = firebase.firestore();\r\nexport const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState, createContext } from 'react';\r\nimport { projectAuth } from '../firebase/config';\r\nimport Loader from '../components/Loader';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    projectAuth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../context/authContext';\r\n\r\nconst PrivateRoute = ({ children, ...restProps }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route {...restProps}>\r\n      {Boolean(currentUser) ? children : <Redirect to=\"/login\" />}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useCallback } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { projectAuth } from '../firebase/config';\r\n\r\nconst Navigation = () => {\r\n  const history = useHistory();\r\n\r\n  const onLogout = useCallback(() => {\r\n    projectAuth.signOut();\r\n    history.push('/');\r\n  }, [history]);\r\n\r\n  return (\r\n    <div className=\"navigation-block\">\r\n      <Link to=\"/\">\r\n        <FontAwesomeIcon icon={faTwitter} />\r\n        <span>Home</span>\r\n      </Link>\r\n      <Link to=\"/profile\">\r\n        <FontAwesomeIcon icon={faUser} />\r\n        <span>Profile</span>\r\n      </Link>\r\n      <button className=\"logout-button\" onClick={onLogout}>\r\n        <FontAwesomeIcon icon={faSignOutAlt} />\r\n        <span>Logout</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ProgressBar = ({ progress, imageUrl, setIsShowProgress }) => {\r\n  useEffect(() => {\r\n    if (imageUrl) {\r\n      setIsShowProgress(false);\r\n    }\r\n  }, [imageUrl, setIsShowProgress]);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + '%' }}\r\n    ></motion.div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faAngleRight,\r\n  faTimes,\r\n  faPlus,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  projectFirestore,\r\n  projectStorage,\r\n  timestamp,\r\n} from '../firebase/config';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = ({ currentUser }) => {\r\n  const [text, setText] = useState('');\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [progress, setProgress] = useState(0);\r\n  const [isShowProgress, setIsShowProgress] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (imageFile !== null) {\r\n      setIsShowProgress(true);\r\n      const imageRef = projectStorage\r\n        .ref()\r\n        .child(`${currentUser.uid}/${imageFile.name}`);\r\n\r\n      imageRef.put(imageFile).on(\r\n        'state_changed',\r\n        (snap) => {\r\n          let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n          setProgress(percentage);\r\n        },\r\n        (error) => {\r\n          setError(error);\r\n        },\r\n        async () => {\r\n          const url = await imageRef.getDownloadURL();\r\n          setImageUrl(url);\r\n        },\r\n      );\r\n    }\r\n  }, [currentUser.uid, imageFile]);\r\n\r\n  const onChangeFile = useCallback((e) => {\r\n    const types = ['image/png', 'image/jpeg'];\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setImageFile(selected);\r\n      setError('');\r\n    } else {\r\n      setImageFile(null);\r\n      setError('png 또는 jpg 이미지 파일만 지원합니다.');\r\n    }\r\n  }, []);\r\n\r\n  const onChangeText = useCallback((e) => {\r\n    setText(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      if (text === '') return;\r\n\r\n      try {\r\n        const tweetObj = {\r\n          text,\r\n          createdAt: timestamp(),\r\n          creatorId: currentUser.uid,\r\n          imageUrl,\r\n        };\r\n        await projectFirestore.collection('tweets').add(tweetObj);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError('오류 발생');\r\n      }\r\n      setText('');\r\n      setImageFile(null);\r\n      setImageUrl('');\r\n      setError('');\r\n    },\r\n    [text, currentUser.uid, imageUrl],\r\n  );\r\n\r\n  const onRemoveImage = useCallback(async () => {\r\n    setImageFile(null);\r\n    setImageUrl('');\r\n    await projectStorage.refFromURL(imageUrl).delete();\r\n  }, [imageUrl]);\r\n\r\n  return (\r\n    <div className=\"upload-form-block\">\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"text-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"오늘 하루는 어땠나요?\"\r\n            value={text}\r\n            onChange={onChangeText}\r\n            maxLength={120}\r\n            required\r\n          />\r\n          <button>{<FontAwesomeIcon icon={faAngleRight} />}</button>\r\n        </div>\r\n        <div className=\"image-form\">\r\n          {!imageFile && (\r\n            <>\r\n              <label>\r\n                <input type=\"file\" accept=\"image/*\" onChange={onChangeFile} />\r\n                <FontAwesomeIcon icon={faPlus} />\r\n              </label>\r\n              <p>사진 추가하기</p>\r\n            </>\r\n          )}\r\n          {imageFile && (\r\n            <div className=\"output\">\r\n              <span className=\"file-name\">{imageFile.name}</span>\r\n              {imageUrl && (\r\n                <div className=\"image-preview\">\r\n                  <img src={imageUrl} alt={imageFile.name} />\r\n                  <div className=\"remove-preview\" onClick={onRemoveImage}>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {isShowProgress && (\r\n                <ProgressBar\r\n                  progress={progress}\r\n                  setIsShowProgress={setIsShowProgress}\r\n                  imageUrl={imageUrl}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n          {error && <div className=\"error\">{error}</div>}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","import React, { useContext } from 'react';\r\nimport UploadForm from './UploadForm';\r\nimport { AuthContext } from '../context/authContext';\r\n\r\nconst TweetFactory = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div className=\"tweet-factory-block\">\r\n      <UploadForm currentUser={currentUser} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetFactory;\r\n","import React from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport TweetFactory from '../components/TweetFactory';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home-block\">\r\n      <div className=\"home-inner\">\r\n        <Navigation />\r\n        <TweetFactory />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst AuthTemplate = ({ children }) => {\r\n  return (\r\n    <div className=\"auth-block\">\r\n      <div className=\"white-box\">\r\n        <div className=\"logo-area\">\r\n          <FontAwesomeIcon icon={faTwitter} />\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst textMap = {\r\n  login: '로그인',\r\n  register: '회원가입',\r\n};\r\n\r\nconst AuthForm = ({\r\n  type,\r\n  form,\r\n  onChange,\r\n  onSubmitEmail,\r\n  onSubmitGoogle,\r\n  error,\r\n}) => {\r\n  const text = textMap[type];\r\n  const { email, username, password } = form;\r\n\r\n  return (\r\n    <div className=\"auth-form-block\">\r\n      <h2>{text}</h2>\r\n      <form>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"이메일\"\r\n          value={email}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        {type === 'register' && (\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"이름\"\r\n            value={username}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        )}\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          value={password}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <button\r\n          className=\"email-button\"\r\n          onClick={\r\n            username\r\n              ? onSubmitEmail(email, password, username)\r\n              : onSubmitEmail(email, password)\r\n          }\r\n        >\r\n          {text}\r\n        </button>\r\n      </form>\r\n      <div className=\"divider\">OR</div>\r\n      <div className=\"social-button\">\r\n        <button className=\"google-button\" onClick={onSubmitGoogle}>\r\n          Google로 계속하기\r\n        </button>\r\n      </div>\r\n      <div className=\"link\">\r\n        {type === 'login' ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n          <Link to=\"/login\">로그인</Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { useReducer, useCallback } from 'react';\r\n\r\nfunction reducer(state, action) {\r\n  return {\r\n    ...state,\r\n    [action.name]: action.value,\r\n  };\r\n}\r\n\r\nexport default function useInput(initialForm) {\r\n  const [state, dispatch] = useReducer(reducer, initialForm);\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      dispatch(e.target);\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return [state, onChange];\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport AuthForm from './AuthForm';\r\nimport { firebaseInstance, projectAuth } from '../firebase/config';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst LoginForm = () => {\r\n  const [form, onChange] = useInput({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const onSubmitEmail = useCallback(\r\n    (email, password) => async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n        await projectAuth.signInWithEmailAndPassword(email, password);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError('로그인 실패');\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onSubmitGoogle = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n      await projectAuth.signInWithPopup(provider);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError('로그인 실패');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"login\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmitEmail={onSubmitEmail}\r\n      onSubmitGoogle={onSubmitGoogle}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../context/authContext';\r\nimport AuthTemplate from '../components/AuthTemplate';\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nconst Login = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      history.push('/');\r\n    }\r\n  }, [history, currentUser]);\r\n\r\n  return (\r\n    <AuthTemplate>\r\n      <LoginForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useCallback, useState } from 'react';\r\nimport AuthForm from './AuthForm';\r\nimport { firebaseInstance, projectAuth } from '../firebase/config';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst RegisterForm = () => {\r\n  const [form, onChange] = useInput({\r\n    email: '',\r\n    password: '',\r\n    username: '',\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const onSubmitEmail = useCallback(\r\n    (email, password, username) => async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n        const { user } = await projectAuth.createUserWithEmailAndPassword(\r\n          email,\r\n          password,\r\n        );\r\n        await user.updateProfile({ ...user, displayName: username });\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError('회원가입 실패');\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onSubmitGoogle = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n      await projectAuth.signInWithPopup(provider);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError('회원가입 실패');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"register\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmitEmail={onSubmitEmail}\r\n      onSubmitGoogle={onSubmitGoogle}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../context/authContext';\r\nimport AuthTemplate from '../components/AuthTemplate';\r\nimport RegisterForm from '../components/RegisterForm';\r\n\r\nconst Register = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      history.push('/');\r\n    }\r\n  }, [history, currentUser]);\r\n\r\n  return (\r\n    <AuthTemplate>\r\n      <RegisterForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\n\r\nconst Profile = () => {\r\n  return <div>Profile Page</div>;\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { AuthProvider } from './context/authContext';\nimport PrivateRoute from './routes/PrivateRoute';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Profile from './pages/Profile';\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <PrivateRoute path=\"/profile\">\n            <Profile />\n          </PrivateRoute>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <PrivateRoute path=\"/\">\n            <Home />\n          </PrivateRoute>\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}