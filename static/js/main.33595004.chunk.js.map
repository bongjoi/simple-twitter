{"version":3,"sources":["firebase/config.js","components/Loader.js","context/authContext.js","routes/PrivateRoute.js","components/Navigation.js","components/TweetFactory.js","pages/Home.js","components/AuthTemplate.js","components/AuthForm.js","hooks/useInput.js","components/LoginForm.js","pages/Login.js","components/RegisterForm.js","pages/Register.js","pages/Profile.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","projectAuth","auth","Loader","storage","firestore","className","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","isLoading","setIsLoading","useEffect","onAuthStateChanged","user","Provider","value","PrivateRoute","restProps","useContext","Boolean","to","Navigation","history","useHistory","onLogout","useCallback","signOut","push","icon","faTwitter","faUser","onClick","faSignOutAlt","TweetFactory","Home","AuthTemplate","textMap","login","register","AuthForm","type","form","onChange","onSubmitEmail","onSubmitGoogle","error","text","email","username","password","name","placeholder","required","reducer","state","action","useInput","initialForm","useReducer","dispatch","e","target","LoginForm","setError","a","preventDefault","signInWithEmailAndPassword","console","provider","GoogleAuthProvider","signInWithPopup","Login","RegisterForm","createUserWithEmailAndPassword","updateProfile","displayName","Register","Profile","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33595004.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const projectAuth = firebase.auth();\r\nexport const projectStorage = firebase.storage();\r\nexport const projectFirestore = firebase.firestore();\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState, createContext } from 'react';\r\nimport { projectAuth } from '../firebase/config';\r\nimport Loader from '../components/Loader';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    projectAuth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../context/authContext';\r\n\r\nconst PrivateRoute = ({ children, ...restProps }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route {...restProps}>\r\n      {Boolean(currentUser) ? children : <Redirect to=\"/login\" />}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useCallback } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { projectAuth } from '../firebase/config';\r\n\r\nconst Navigation = () => {\r\n  const history = useHistory();\r\n\r\n  const onLogout = useCallback(() => {\r\n    projectAuth.signOut();\r\n    history.push('/');\r\n  }, [history]);\r\n\r\n  return (\r\n    <div className=\"navigation-block\">\r\n      <Link to=\"/\">\r\n        <FontAwesomeIcon icon={faTwitter} />\r\n        <span>Home</span>\r\n      </Link>\r\n      <Link to=\"/profile\">\r\n        <FontAwesomeIcon icon={faUser} />\r\n        <span>Profile</span>\r\n      </Link>\r\n      <button className=\"logout-button\" onClick={onLogout}>\r\n        <FontAwesomeIcon icon={faSignOutAlt} />\r\n        <span>Logout</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\nconst TweetFactory = () => {\r\n  return (\r\n    <div className=\"tweet-factory-block\">\r\n      <p>제작중...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetFactory;\r\n","import React from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport TweetFactory from '../components/TweetFactory';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home-block\">\r\n      <div className=\"home-inner\">\r\n        <Navigation />\r\n        <TweetFactory />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst AuthTemplate = ({ children }) => {\r\n  return (\r\n    <div className=\"auth-block\">\r\n      <div className=\"white-box\">\r\n        <div className=\"logo-area\">\r\n          <FontAwesomeIcon icon={faTwitter} />\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst textMap = {\r\n  login: '로그인',\r\n  register: '회원가입',\r\n};\r\n\r\nconst AuthForm = ({\r\n  type,\r\n  form,\r\n  onChange,\r\n  onSubmitEmail,\r\n  onSubmitGoogle,\r\n  error,\r\n}) => {\r\n  const text = textMap[type];\r\n  const { email, username, password } = form;\r\n\r\n  return (\r\n    <div className=\"auth-form-block\">\r\n      <h2>{text}</h2>\r\n      <form>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"이메일\"\r\n          value={email}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        {type === 'register' && (\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"이름\"\r\n            value={username}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        )}\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          value={password}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <button\r\n          className=\"email-button\"\r\n          onClick={\r\n            username\r\n              ? onSubmitEmail(email, password, username)\r\n              : onSubmitEmail(email, password)\r\n          }\r\n        >\r\n          {text}\r\n        </button>\r\n      </form>\r\n      <div className=\"divider\">OR</div>\r\n      <div className=\"social-button\">\r\n        <button className=\"google-button\" onClick={onSubmitGoogle}>\r\n          Google로 계속하기\r\n        </button>\r\n      </div>\r\n      <div className=\"link\">\r\n        {type === 'login' ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n          <Link to=\"/login\">로그인</Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { useReducer, useCallback } from 'react';\r\n\r\nfunction reducer(state, action) {\r\n  return {\r\n    ...state,\r\n    [action.name]: action.value,\r\n  };\r\n}\r\n\r\nexport default function useInput(initialForm) {\r\n  const [state, dispatch] = useReducer(reducer, initialForm);\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      dispatch(e.target);\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return [state, onChange];\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport AuthForm from './AuthForm';\r\nimport { firebaseInstance, projectAuth } from '../firebase/config';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst LoginForm = () => {\r\n  const [form, onChange] = useInput({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const onSubmitEmail = useCallback(\r\n    (email, password) => async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n        await projectAuth.signInWithEmailAndPassword(email, password);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError('로그인 실패');\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onSubmitGoogle = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n      await projectAuth.signInWithPopup(provider);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError('로그인 실패');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"login\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmitEmail={onSubmitEmail}\r\n      onSubmitGoogle={onSubmitGoogle}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../context/authContext';\r\nimport AuthTemplate from '../components/AuthTemplate';\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nconst Login = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      history.push('/');\r\n    }\r\n  }, [history, currentUser]);\r\n\r\n  return (\r\n    <AuthTemplate>\r\n      <LoginForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useCallback, useState } from 'react';\r\nimport AuthForm from './AuthForm';\r\nimport { firebaseInstance, projectAuth } from '../firebase/config';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst RegisterForm = () => {\r\n  const [form, onChange] = useInput({\r\n    email: '',\r\n    password: '',\r\n    username: '',\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const onSubmitEmail = useCallback(\r\n    (email, password, username) => async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n        const { user } = await projectAuth.createUserWithEmailAndPassword(\r\n          email,\r\n          password,\r\n        );\r\n        await user.updateProfile({ ...user, displayName: username });\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError('회원가입 실패');\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const onSubmitGoogle = useCallback(async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n      await projectAuth.signInWithPopup(provider);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError('회원가입 실패');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"register\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmitEmail={onSubmitEmail}\r\n      onSubmitGoogle={onSubmitGoogle}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../context/authContext';\r\nimport AuthTemplate from '../components/AuthTemplate';\r\nimport RegisterForm from '../components/RegisterForm';\r\n\r\nconst Register = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      history.push('/');\r\n    }\r\n  }, [history, currentUser]);\r\n\r\n  return (\r\n    <AuthTemplate>\r\n      <RegisterForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\n\r\nconst Profile = () => {\r\n  return <div>Profile Page</div>;\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { AuthProvider } from './context/authContext';\nimport PrivateRoute from './routes/PrivateRoute';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Profile from './pages/Profile';\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <PrivateRoute path=\"/profile\">\n            <Profile />\n          </PrivateRoute>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <PrivateRoute path=\"/\">\n            <Home />\n          </PrivateRoute>\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}